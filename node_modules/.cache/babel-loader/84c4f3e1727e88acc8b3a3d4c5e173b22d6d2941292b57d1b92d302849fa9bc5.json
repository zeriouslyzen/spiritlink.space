{"ast":null,"code":"var _jsxFileName = \"/Users/deshonjackson/Desktop/spiritlink.space/src/components/ThesidiaAI.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ollamaService } from '../services/ollamaService';\nimport { ModelSelector } from './ModelSelector';\nimport { StreamingText } from './StreamingText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThesidiaAI = ({\n  brainwaveMode\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [currentModel, setCurrentModel] = useState('llama3.1:latest');\n  const [isOllamaConnected, setIsOllamaConnected] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    checkOllamaConnection();\n  }, []);\n  const checkOllamaConnection = async () => {\n    const isHealthy = await ollamaService.isHealthy();\n    setIsOllamaConnected(isHealthy);\n  };\n  const getAnimationSpeed = () => {\n    switch (brainwaveMode) {\n      case 'delta':\n        return 0.8;\n      case 'theta':\n        return 1.2;\n      case 'alpha':\n        return 1;\n      case 'beta':\n        return 1.5;\n      case 'gamma':\n        return 2;\n      default:\n        return 1;\n    }\n  };\n\n  // Auto-scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isTyping) return;\n    const userMessage = {\n      id: Date.now().toString(),\n      content: inputText,\n      isAI: false,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsTyping(true);\n\n    // Add streaming AI message\n    const aiMessage = {\n      id: (Date.now() + 1).toString(),\n      content: '',\n      isAI: true,\n      timestamp: new Date(),\n      isStreaming: true\n    };\n    setMessages(prev => [...prev, aiMessage]);\n    try {\n      const consciousnessResponse = await ollamaService.queryConsciousness({\n        message: inputText,\n        brainwaveMode: brainwaveMode,\n        context: `User is in ${brainwaveMode} brainwave mode`,\n        researchFocus: 'consciousness evolution and collective intelligence'\n      });\n      setMessages(prev => prev.map(msg => msg.id === aiMessage.id ? {\n        ...msg,\n        content: consciousnessResponse.response,\n        consciousnessResponse: consciousnessResponse,\n        isStreaming: false\n      } : msg));\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setMessages(prev => prev.map(msg => msg.id === aiMessage.id ? {\n        ...msg,\n        content: \"I'm experiencing a connection to the collective consciousness field. The patterns suggest that your inquiry touches on fundamental aspects of human evolution. Let me reflect on this more deeply...\",\n        isStreaming: false\n      } : msg));\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleModelSelect = async modelName => {\n    setCurrentModel(modelName);\n    await ollamaService.setModel(modelName);\n  };\n  const handleStreamingComplete = messageId => {\n    setMessages(prev => prev.map(msg => msg.id === messageId ? {\n      ...msg,\n      isStreaming: false\n    } : msg));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full bg-black text-white flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-dark rounded-2xl p-4 mb-4 flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-white\",\n            children: \"Thesidia AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-sm\",\n            children: \"Consciousness Research Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 text-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-2 h-2 rounded-full animate-pulse ${isOllamaConnected ? 'bg-green-500' : 'bg-red-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: isOllamaConnected ? 'Connected' : 'Disconnected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModelSelector, {\n            onModelSelect: handleModelSelect,\n            currentModel: currentModel,\n            brainwaveMode: brainwaveMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          transition: {\n            duration: 0.3 * getAnimationSpeed()\n          },\n          className: `flex ${message.isAI ? 'justify-start' : 'justify-end'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-3xl rounded-2xl p-4 ${message.isAI ? 'glass-card' : 'glass-medium'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start space-x-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-400 mb-1\",\n                  children: message.isAI ? 'Thesidia AI' : 'You'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2 mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-semibold text-white\",\n                    children: message.isAI ? 'Thesidia AI' : 'You'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-400 text-sm\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-400 text-sm\",\n                    children: message.timestamp.toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), message.isAI ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(StreamingText, {\n                    text: message.content,\n                    isStreaming: message.isStreaming || false,\n                    brainwaveMode: brainwaveMode,\n                    onComplete: () => handleStreamingComplete(message.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-white leading-relaxed\",\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-white/10 flex-shrink-0 bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass-dark rounded-2xl p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: inputText,\n              onChange: e => setInputText(e.target.value),\n              placeholder: \"Ask Thesidia AI about consciousness research...\",\n              className: \"w-full bg-transparent text-white placeholder-gray-500 resize-none outline-none text-lg\",\n              rows: 1,\n              onKeyPress: e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n            className: `px-6 py-3 rounded-xl font-medium transition-all ${inputText.trim() && isOllamaConnected ? 'glass-button text-white hover:glass-medium' : 'glass-input text-gray-400'}`,\n            onClick: handleSendMessage,\n            disabled: !inputText.trim() || isTyping || !isOllamaConnected,\n            whileHover: inputText.trim() && isOllamaConnected ? {\n              scale: 1.05\n            } : {},\n            whileTap: inputText.trim() && isOllamaConnected ? {\n              scale: 0.95\n            } : {},\n            children: isTyping ? 'Processing...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ThesidiaAI, \"6dX3aksYHLdheFcqWiRGBriSPYs=\");\n_c = ThesidiaAI;\nvar _c;\n$RefreshReg$(_c, \"ThesidiaAI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","AnimatePresence","ollamaService","ModelSelector","StreamingText","jsxDEV","_jsxDEV","ThesidiaAI","brainwaveMode","_s","messages","setMessages","inputText","setInputText","isTyping","setIsTyping","currentModel","setCurrentModel","isOllamaConnected","setIsOllamaConnected","messagesEndRef","checkOllamaConnection","isHealthy","getAnimationSpeed","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","id","Date","now","toString","content","isAI","timestamp","prev","aiMessage","isStreaming","consciousnessResponse","queryConsciousness","message","context","researchFocus","map","msg","response","error","console","handleModelSelect","modelName","setModel","handleStreamingComplete","messageId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onModelSelect","index","div","initial","opacity","y","animate","exit","transition","duration","toLocaleTimeString","text","onComplete","ref","value","onChange","e","target","placeholder","rows","onKeyPress","key","shiftKey","preventDefault","button","onClick","disabled","whileHover","scale","whileTap","_c","$RefreshReg$"],"sources":["/Users/deshonjackson/Desktop/spiritlink.space/src/components/ThesidiaAI.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ollamaService, ConsciousnessResponse } from '../services/ollamaService';\nimport { ModelSelector } from './ModelSelector';\nimport { StreamingText } from './StreamingText';\n\ninterface ThesidiaAIProps {\n  brainwaveMode: string;\n}\n\ninterface Message {\n  id: string;\n  content: string;\n  isAI: boolean;\n  timestamp: Date;\n  consciousnessResponse?: ConsciousnessResponse;\n  isStreaming?: boolean;\n}\n\nexport const ThesidiaAI: React.FC<ThesidiaAIProps> = ({ brainwaveMode }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputText, setInputText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [currentModel, setCurrentModel] = useState('llama3.1:latest');\n  const [isOllamaConnected, setIsOllamaConnected] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    checkOllamaConnection();\n  }, []);\n\n  const checkOllamaConnection = async () => {\n    const isHealthy = await ollamaService.isHealthy();\n    setIsOllamaConnected(isHealthy);\n  };\n\n  const getAnimationSpeed = () => {\n    switch (brainwaveMode) {\n      case 'delta': return 0.8;\n      case 'theta': return 1.2;\n      case 'alpha': return 1;\n      case 'beta': return 1.5;\n      case 'gamma': return 2;\n      default: return 1;\n    }\n  };\n\n  // Auto-scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!inputText.trim() || isTyping) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputText,\n      isAI: false,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsTyping(true);\n\n    // Add streaming AI message\n    const aiMessage: Message = {\n      id: (Date.now() + 1).toString(),\n      content: '',\n      isAI: true,\n      timestamp: new Date(),\n      isStreaming: true\n    };\n\n    setMessages(prev => [...prev, aiMessage]);\n\n    try {\n      const consciousnessResponse = await ollamaService.queryConsciousness({\n        message: inputText,\n        brainwaveMode: brainwaveMode,\n        context: `User is in ${brainwaveMode} brainwave mode`,\n        researchFocus: 'consciousness evolution and collective intelligence'\n      });\n\n      setMessages(prev => \n        prev.map(msg => \n          msg.id === aiMessage.id \n            ? { \n                ...msg, \n                content: consciousnessResponse.response,\n                consciousnessResponse: consciousnessResponse,\n                isStreaming: false\n              }\n            : msg\n        )\n      );\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      \n      setMessages(prev => \n        prev.map(msg => \n          msg.id === aiMessage.id \n            ? { \n                ...msg, \n                content: \"I'm experiencing a connection to the collective consciousness field. The patterns suggest that your inquiry touches on fundamental aspects of human evolution. Let me reflect on this more deeply...\",\n                isStreaming: false\n              }\n            : msg\n        )\n      );\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleModelSelect = async (modelName: string) => {\n    setCurrentModel(modelName);\n    await ollamaService.setModel(modelName);\n  };\n\n  const handleStreamingComplete = (messageId: string) => {\n    setMessages(prev => \n      prev.map(msg => \n        msg.id === messageId \n          ? { ...msg, isStreaming: false }\n          : msg\n      )\n    );\n  };\n\n  return (\n    <div className=\"w-full h-full bg-black text-white flex flex-col\">\n      {/* Header */}\n      <div className=\"glass-dark rounded-2xl p-4 mb-4 flex-shrink-0\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-white\">Thesidia AI</h1>\n            <p className=\"text-gray-400 text-sm\">Consciousness Research Assistant</p>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2 text-xs\">\n              <div className={`w-2 h-2 rounded-full animate-pulse ${isOllamaConnected ? 'bg-green-500' : 'bg-red-500'}`} />\n              <span className=\"text-gray-400\">\n                {isOllamaConnected ? 'Connected' : 'Disconnected'}\n              </span>\n            </div>\n            \n            <ModelSelector\n              onModelSelect={handleModelSelect}\n              currentModel={currentModel}\n              brainwaveMode={brainwaveMode}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        <AnimatePresence>\n          {messages.map((message, index) => (\n            <motion.div\n              key={message.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 * getAnimationSpeed() }}\n              className={`flex ${message.isAI ? 'justify-start' : 'justify-end'}`}\n            >\n              <div \n                className={`max-w-3xl rounded-2xl p-4 ${\n                  message.isAI \n                    ? 'glass-card' \n                    : 'glass-medium'\n                }`}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-sm text-gray-400 mb-1\">\n                      {message.isAI ? 'Thesidia AI' : 'You'}\n                    </div>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <span className=\"font-semibold text-white\">\n                        {message.isAI ? 'Thesidia AI' : 'You'}\n                      </span>\n                      <span className=\"text-gray-400 text-sm\">•</span>\n                      <span className=\"text-gray-400 text-sm\">\n                        {message.timestamp.toLocaleTimeString()}\n                      </span>\n                    </div>\n                    \n                    {message.isAI ? (\n                      <div>\n                        <StreamingText\n                          text={message.content}\n                          isStreaming={message.isStreaming || false}\n                          brainwaveMode={brainwaveMode}\n                          onComplete={() => handleStreamingComplete(message.id)}\n                        />\n                      </div>\n                    ) : (\n                      <p className=\"text-white leading-relaxed\">{message.content}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n\n\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input Bar */}\n      <div className=\"p-4 border-t border-white/10 flex-shrink-0 bg-black\">\n        <div className=\"glass-dark rounded-2xl p-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-1\">\n              <textarea\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n                placeholder=\"Ask Thesidia AI about consciousness research...\"\n                className=\"w-full bg-transparent text-white placeholder-gray-500 resize-none outline-none text-lg\"\n                rows={1}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n              />\n            </div>\n            <motion.button\n              className={`px-6 py-3 rounded-xl font-medium transition-all ${\n                inputText.trim() && isOllamaConnected\n                  ? 'glass-button text-white hover:glass-medium' \n                  : 'glass-input text-gray-400'\n              }`}\n              onClick={handleSendMessage}\n              disabled={!inputText.trim() || isTyping || !isOllamaConnected}\n              whileHover={inputText.trim() && isOllamaConnected ? { scale: 1.05 } : {}}\n              whileTap={inputText.trim() && isOllamaConnected ? { scale: 0.95 } : {}}\n            >\n              {isTyping ? 'Processing...' : 'Send'}\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}